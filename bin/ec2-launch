#!/bin/bash -e

# Copyright (c) 2012 DiUS Computing Pty Ltd

# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all copies or substantial 
# portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
# TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

USERDATA_FILE=/tmp/ec2.userdata
LAUNCH_FILE=/tmp/ec2_launch.out
DESCRIBE_FILE=/tmp/ec2_describe.out

DEFAULT_INSTANCE_TYPE="t1.micro"

. $(dirname $0)/functions

usage() {
  echo "Usage: $0 -k KEY_PAIR [ -t TYPE] [ -g GROUP,... ]] [ -d DURATION ] AMI HOSTNAME"
}

instance_type=$DEFAULT_INSTANCE_TYPE
duration=0

while getopts "ht:k:g:d:" opt; do
    case $opt in
      h)
        usage
        exit 0
        ;;
      t)
        instance_type=$OPTARG;;
      k)
        key_pair=$OPTARG;;
      g)
        groups=$OPTARG;;
      d)
        duration=$OPTARG;;
      \?)
        usage
        exit 1
        ;;
    esac
done
shift $((OPTIND - 1))

if [ -z $key_pair ]; then usage; exit 1; fi
if [ $# != 2 ]; then usage; exit 1; fi

ami=$1
fqdn=$2
hostname=$(echo $fqdn | cut -f 1 -d .)
if [ $duration != 0 ]; then
  check_ssh_environment
fi

echo "Launching instance with hostname $fqdn from AMI $ami"

ec2_command="$EC2_RUN_CMD $ami \
  -t $instance_type \
  -b /dev/sda1=:100 \
  -k $key_pair"

groups=$(echo $groups | tr , " ")
for group in $groups; do
  ec2_command="$ec2_command -g $group"
done

if [ $duration != 0 ]; then
  ec2_command="$ec2_command --instance-initiated-shutdown-behavior terminate"
fi

$ec2_command > $LAUNCH_FILE
ec2_instance_id=$(awk '/INSTANCE/ { print $2 }' $LAUNCH_FILE)

echo "EC2 Instance ID: $ec2_instance_id"

get_instance_address $ec2_instance_id

echo "EC2 IP Address: $ec2_ip_address"
echo "EC2 Hostname: $ec2_hostname"
echo "Tagged Hostname: $fqdn"

$(dirname $0)/ec2-name -d $ec2_instance_id $fqdn

if [ $duration != 0 ]; then
  echo "Scheduling termination in $duration minutes"
  
  set +e
  ssh -i $EC2_SSH_KEY_PATH \
    -o StrictHostKeyChecking=no \
    -o ConnectionAttempts=120 \
    $EC2_SSH_USER@$ec2_hostname \
    "echo 'sudo halt' | at now + $duration min"
  
  if [ $? == 255 ]; then
    echo "Error occurred connecting to $ec2_hostname after 120 attempts"
  fi
  set -e    
fi
