#!/usr/bin/env ruby

# Copyright (c) 2012 DiUS Computing Pty Ltd

# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all copies or substantial 
# portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
# TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

$: << File.expand_path("../../lib", __FILE__)

require 'rubygems'
require 'getoptlong'
require 'ec2_tools'

USAGE = "Usage: ec2-launch -k KEY_PAIR [ -t TYPE] [ -g GROUP,... ]] [ -d DURATION ] [ -b BLOCK_SIZE ] AMI_NAME HOSTNAME"

opts = GetoptLong.new(
    [ "--help",	"-h", GetoptLong::NO_ARGUMENT ],
    [ "--key-pair",	"-k", GetoptLong::REQUIRED_ARGUMENT ],
    [ "--type",	"-t", GetoptLong::REQUIRED_ARGUMENT ],
    [ "--group",	"-g", GetoptLong::REQUIRED_ARGUMENT ],
    [ "--duration",	"-d", GetoptLong::REQUIRED_ARGUMENT ],
    [ "--block-size", "-b", GetoptLong::REQUIRED_ARGUMENT ],
    [ "--no-obsolete",	"-O", GetoptLong::NO_ARGUMENT ]
)

instance_type = EC2Tools::EC2::DEFAULT_INSTANCE_TYPE
block_size = EC2Tools::EC2::DEFAULT_BLOCK_SIZE
security_groups = []
key_pair = nil
duration = nil
obsolete_duplicates = true

begin
  opts.each do |opt, arg|
    case opt
      when "--help"
        puts USAGE
        exit 0
      when "--key-pair"
        key_pair = arg
      when "--type"
        instance_type = arg
      when "--group"
        security_groups = arg.split(',')
      when "--duration"
        duration = arg
      when "--no-obsolete"
        obsolete_duplicates = false
      when "--block-size"
        block_size = arg
    end
  end
rescue GetoptLong::Error => e
  puts USAGE
  exit 1
end

unless key_pair and ARGV.length == 2
  puts USAGE
  exit 1
end

ami_name = ARGV[0]
hostname = ARGV[1]

instance_count = EC2Tools::EC2::list_instances(EC2Tools::EC2::STATE_CODES[:running], /^#{hostname}$/).count
if instance_count == 0 or obsolete_duplicates
  EC2Tools::EC2::launch_instance(key_pair, instance_type, security_groups, duration, ami_name, hostname, block_size)
else
  puts "An instance with hostname #{hostname} is already running, and you specified --no-obsolete"
end
